{
  "name": "crud",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node build/dist/main",
    "test:unit": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "ts-node ./node_modules/typeorm/cli",
    "db:migrate:dev": "nest build && npm run typeorm migration:run -- -d ./dist/database/config/typeorm.config.js",
    "migration:create": "nest build && npm run typeorm -- migration:create ./src/database/migrations/$npm_config_name",
    "migration:generate": "nest build && npm run typeorm -- -d ./dist/database/config/typeorm.config.js migration:generate ./dist/database/migrations/$npm_config_name",
    "db:migrate:dev:rollback": "nest build && npm run typeorm -- -d ./dist/database/config/typeorm.config.js migration:revert",
    "seed": "nest build && node dist/database/seeds/seed.js --name=$npm_config_name",
    "seed:clean": "nest build && node dist/database/seeds/seed.js --name=$npm_config_name --clean",
    "app:install": "nest build && npm run db:migrate:dev && node dist/database/seeds/seed.js --install",
    "app:install:clean": "nest build && npm run db:migrate:dev && node dist/database/seeds/seed.js --install --clean",
    "app:install:create_admin_user": "nest build && npm run db:migrate:dev && node dist/database/seeds/seed.js --install --clean --create_admin"
  },
  "dependencies": {
    "@faker-js/faker": "^8.1.0",
    "@nestjs/axios": "^3.0.0",
    "@nestjs/common": "^10.2.6",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.2.6",
    "@nestjs/event-emitter": "^2.0.2",
    "@nestjs/jwt": "^10.1.1",
    "@nestjs/mapped-types": "*",
    "@nestjs/passport": "^10.0.2",
    "@nestjs/platform-express": "^10.2.5",
    "@nestjs/platform-socket.io": "^10.2.6",
    "@nestjs/swagger": "^7.1.11",
    "@nestjs/typeorm": "^10.0.0",
    "@nestjs/websockets": "^10.2.6",
    "@types/bcrypt": "^5.0.0",
    "@types/express": "^4.17.13",
    "@types/passport": "^1.0.13",
    "axios": "^1.5.0",
    "bcrypt": "^5.0.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "csv-parser": "^3.0.0",
    "dotenv": "^16.0.3",
    "is-valid-hostname": "^1.0.2",
    "moment": "^2.29.4",
    "mysql2": "^2.3.3",
    "nest-csv-parser": "^2.0.4",
    "nestjs-typeorm-paginate": "^4.0.2",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pg": "^8.11.3",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "socket.io": "^4.7.2",
    "typeorm": "^0.3.17",
    "typeorm-extension": "^3.1.1",
    "yargs": "^17.7.2"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.1.17",
    "@nestjs/schematics": "^10.0.2",
    "@nestjs/testing": "^10.2.5",
    "@types/faker": "^6.6.9",
    "@types/jest": "28.1.8",
    "@types/node": "^16.0.0",
    "@types/passport-jwt": "^3.0.6",
    "@types/passport-local": "^1.0.34",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "eslint": "^8.53.0",
    "eslint-config-nestjs": "^0.7.3",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "jest": "28.1.3",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "28.0.8",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.1.0",
    "typescript": "^4.7.4"
  },
  "peerDependencies": {
    "@nestjs/common": "^10.2.6",
    "@nestjs/core": "^10.2.6"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
